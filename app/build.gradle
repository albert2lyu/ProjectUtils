apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def libVersionCode = 1
def libVersionName = "0.1"
def release_libVersionName = 'release_' + libVersionName
def siteUrl = 'https://github.com/ChinaSunHZ/ProjectUtils'
def gitUrl = 'https://github.com/ChinaSunHZ/ProjectUtils.git'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21

        versionCode = libVersionCode
        versionName = libVersionName
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }

}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-v4:21.0.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.mcxiaoke.volley:library:1.0.15'
    compile 'com.orhanobut:logger:1.10'
}


group = "com.sunhz.projectutils"
version = release_libVersionName

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging = 'aar'
                name = 'ProjectUtils For Android'
                artifactId = 'ProjectUtils For Android'
                version = release_libVersionName

                url = siteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'spencer'
                        name 'spencer'
                        email 'china.sunhz@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

android.libraryVariants.all { variant ->
    if (variant.name == 'release') {
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            source = variant.javaCompile.source
            classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
            options {
                encoding "UTF-8"
                links "http://docs.oracle.com/javase/7/docs/api/"
                linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
            }
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }

        task("javadoc${variant.name.capitalize()}Jar", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
            classifier = 'javadoc'
            from tasks.getByName("generate${variant.name.capitalize()}Javadoc").destinationDir
        }

        task("source${variant.name.capitalize()}Jar", type: Jar) {
            classifier = 'sources'
            from android.sourceSets.main.java.srcDirs
        }

        artifacts {
            archives tasks.getByName("javadoc${variant.name.capitalize()}Jar")
            archives tasks.getByName("source${variant.name.capitalize()}Jar")
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "Maven"
        name = "ProjectUtils"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true

        version {

            name = release_libVersionName
            vcsTag = release_libVersionName
            released  = new Date()
            gpg {
                sign = true
            }
        }

    }
}

